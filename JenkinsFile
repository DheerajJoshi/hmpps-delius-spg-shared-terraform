pipeline {
    agent { label "!master && !windows_slave" }
    options {
        disableConcurrentBuilds()
    }

    tools {
            maven 'Maven 3.3.9'
            jdk 'jdk8'
    }

    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                    echo "WORKSPACE = ${WORKSPACE}"
                    echo "Pulling latest terraform builder"
                    docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                '''
            }
        }

        stage ('push-spg-docker') {
            steps {
                sh 'sh scripts/image_push.sh'
            }
        }


        stage ('tf-common') {
            steps {
                docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                sh "python docker-run.py --env ${environment_type} --action plan --component common"
                sh "python docker-run.py --env ${environment_type} --action apply --component common"
            }
        }


        stage ('tf-s3buckets') {
            steps {
                docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                sh "python docker-run.py --env ${environment_type} --action plan --component s3buckets"
                sh "python docker-run.py --env ${environment_type} --action apply --component s3buckets"
            }
        }


        stage ('tf-iam') {
            steps {
                docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                sh "python docker-run.py --env ${environment_type} --action plan --component iam"
                sh "python docker-run.py --env ${environment_type} --action apply --component iam"
            }
        }


        stage ('tf-ecr') {
            steps {
                docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                sh "python docker-run.py --env ${environment_type} --action plan --component ecr"
                sh "python docker-run.py --env ${environment_type} --action apply --component ecr"
            }
        }


        stage ('tf-security-groups') {
            steps {
                docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                sh "python docker-run.py --env ${environment_type} --action plan --component security-groups"
                sh "python docker-run.py --env ${environment_type} --action apply --component security-groups"
            }
        }


        stage ('tf-ecs-spg') {
            steps {
                docker pull mojdigitalstudio/hmpps-terraform-builder:latest
                sh "python docker-run.py --env ${environment_type} --action plan --component ecs-spg"
                sh "python docker-run.py --env ${environment_type} --action apply --component ecs-spg"
            }
        }



    }
}

